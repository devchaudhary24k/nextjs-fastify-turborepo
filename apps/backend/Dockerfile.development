# syntax=docker.io/docker/dockerfile:1

FROM node:18-alpine AS base
FROM base AS builder
RUN apk update
RUN apk add --no-cache libc6-compat
# RUN npm i -g pnpm

# Set working directory
WORKDIR /app
RUN npm i -g turbo@latest
COPY . .

# Generate a partial monorepo with lockfile for a target workspace.
RUN turbo prune backend --docker

# Add lockfile and package.json's of isolated subworkspace
FROM base AS installer
RUN apk update 
RUN apk add --no-cache libc6-compat
RUN npm i -g pnpm
WORKDIR /app

# First install the dependencies (as they change less often)
COPY --from=builder /app/out/json/ .
RUN pnpm install --frozen-lockfile

# Build the project 
COPY --from=builder /app/out/full/ .
RUN cp apps/backend/.env.example apps/backend/.env
RUN pnpm turbo run build

FROM base AS runner
WORKDIR /app

# Don't run development as root
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 fastify
USER fastify

COPY --from=installer --chown=fastify:nodejs /app/apps/backend/dist ./dist

CMD ["node", "dist/server.js"]